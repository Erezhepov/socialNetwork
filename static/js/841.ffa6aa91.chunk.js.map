{"version":3,"file":"static/js/841.ffa6aa91.chunk.js","mappings":"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","sources":["components/InputItem.tsx","components/pagination/Pagination.tsx","webpack://practice/./src/components/users/SearchInput.module.css?5615","components/users/SearchInput.tsx","pages/users/UsersPage.tsx","pages/users/user/User.tsx","webpack://practice/./src/pages/users/UsersPage.module.css?d5c2"],"sourcesContent":["import React, {useState} from 'react';\r\n\r\ninterface IInputItem {\r\n    type: string\r\n    placeholder: string\r\n    getValue: (value: string) => void\r\n    required: boolean\r\n}\r\n\r\nconst InputItem = (props: IInputItem) => {\r\n    const [error, setError] = useState<boolean>(false)\r\n    const [value, setValue] = useState<string>('')\r\n    const changeValue = (e:  React.ChangeEvent<HTMLInputElement>) => {\r\n        setError(false)\r\n        setValue(e.target.value)\r\n    }\r\n    const setChangedValue = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        if (e.target.value.trim().length === 0){\r\n            setError(true)\r\n        }\r\n        props.getValue(value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input onBlur={setChangedValue} value={value} onChange={changeValue} placeholder={props.placeholder} type={props.type}/>\r\n            {props.required && error && <div className='error-text'>This field must be required</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputItem;","import React, {useState} from 'react';\r\nimport {ActionUsersPage} from \"../../store/actionCreators/user\";\r\nimport {Dispatch} from \"redux\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ninterface IPagination {\r\n    page: number\r\n    totalCount: number\r\n}\r\n\r\nconst Pagination: React.FC<IPagination> = ({page, totalCount}) => {\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    const changePage = (page: number) => dispatch(ActionUsersPage(page))\r\n    const dispatch: Dispatch<any> = useDispatch()\r\n    let pageSize: number = 20\r\n    const portions: number = 5\r\n    const pages: number[] = []\r\n    const portionCount: number = Math.ceil(totalCount / pageSize)\r\n    for (let i=1; i<portionCount; i++) pages.push(i)\r\n    const prevPortionItems: number = ((portionNumber - 1) * portions) + 1\r\n    const nextPortionItems: number = portionNumber * portions\r\n    return (\r\n        <div className='pagination'>\r\n            {portionNumber > 1 &&  <button onClick={() => setPortionNumber(prev => prev - 1)}>Prev</button>}\r\n            {pages.filter(page => prevPortionItems <= page && page <= nextPortionItems)\r\n                .map(p => <button key={p} style={{background: page === p ? '#B4D335' : ''}} onClick={() => changePage(p)} >{p}</button>)}\r\n            <button onClick={() => setPortionNumber(prev => prev + 1)}>Next</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","// extracted by mini-css-extract-plugin\nexport default {\"searchInput\":\"SearchInput_searchInput__pUd3Y\",\"btn\":\"SearchInput_btn__3VnPa\"};","import React, {useState} from 'react';\r\nimport InputItem from \"../InputItem\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {fetchFindUsers} from \"../../store/actionCreators/user\";\r\nimport s from './SearchInput.module.css'\r\n\r\nconst SearchInput = () => {\r\n    const dispatch: any = useDispatch()\r\n    const [name, setName] = useState<string>('')\r\n    const getUser = (value: string) => setName(value)\r\n    const findUsers = () => {\r\n        if (name) dispatch(fetchFindUsers(name))\r\n    }\r\n\r\n    return (\r\n        <div className={s.searchInput}>\r\n            <InputItem type={'text'} placeholder={'Find users'} getValue={getUser} required={false} />\r\n            <button className={s.btn} onClick={findUsers}>Find</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchInput;","import React, {useEffect} from 'react';\r\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\r\nimport {ActionUsersPage, fetchFindUsers, fetchFollow, fetchUnfollow, fetchUsers} from \"../../store/actionCreators/user\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport s from './UsersPage.module.css'\r\nimport User from \"./user/User\";\r\nimport {Dispatch} from \"redux\";\r\nimport Pagination from \"../../components/pagination/Pagination\";\r\nimport SearchInput from \"../../components/users/SearchInput\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\n\r\nconst UsersPage = () => {\r\n    const {users, loading, error, page, totalCount, filter} = useTypedSelector(state => state.users)\r\n    const authState = useTypedSelector(state => state.auth)\r\n    const dispatch: Dispatch<any> = useDispatch()\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n    const params = new URLSearchParams(location.search)\r\n    let queryPage: string | null;\r\n    useEffect(() => {\r\n        queryPage = params.get('page')\r\n        if (queryPage){\r\n            dispatch(fetchUsers(Number(queryPage), 20))\r\n            dispatch(ActionUsersPage(+queryPage))\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        navigate(`/users?page=${page}`)\r\n    }, [filter, page])\r\n    useEffect(() => {\r\n        if (!Number(queryPage)){\r\n            dispatch(fetchUsers(page, 20))\r\n        }\r\n    }, [authState.isAuth, page, dispatch])\r\n    const follow = (userId: number) => dispatch(fetchFollow(userId))\r\n    const unfollow = (userId: number) => dispatch(fetchUnfollow(userId))\r\n    if (error) return <div>{error}</div>\r\n    if (!authState.isAuth) return <div><h2>You need to login</h2></div>\r\n    return (\r\n        <div>\r\n            {loading && <div>Loading...</div>}\r\n            <SearchInput />\r\n            <Pagination page={page} totalCount={totalCount} />\r\n            <div className={s.users}>\r\n                {users.map(user => <User authId={authState.userId} key={user.id} user={user} follow={follow} unfollow={unfollow} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UsersPage;","import React, {useState} from 'react';\r\nimport s from \"../UsersPage.module.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {IUser} from \"../../../types/user\";\r\n\r\nexport interface IUserPage {\r\n    user: IUser\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    authId: number | null\r\n}\r\n\r\nconst User = (props: IUserPage) => {\r\n    const follow = (id: number) => props.follow(id)\r\n    const unfollow = (id: number) => props.unfollow(id)\r\n    return (\r\n        <div key={props.user.id} className={s.item}>\r\n            <Link to={'/profile/' + props.user.id} className={s.avatar}>\r\n                <img className={s.img} src={props.user.photos?.small || 'https://img.freepik.com/free-icon/user_318-159711.jpg'} alt=\"\"/>\r\n            </Link>\r\n            <div className={s.info}>\r\n                <div className={s.name}>{props.user.name}</div>\r\n                <div className={s.status}>{props.user.status}</div>\r\n                {\r\n                    props.user.followed ?\r\n                        <button style={{background: 'rgb(180, 211, 53)'}} onClick={() => unfollow(props.user.id)}>Unfollow</button>\r\n                        : props.user.id !== props.authId && <button onClick={() => follow(props.user.id)}>Follow</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","// extracted by mini-css-extract-plugin\nexport default {\"users\":\"UsersPage_users__RsHeL\",\"item\":\"UsersPage_item__yYF+Z\",\"avatar\":\"UsersPage_avatar__piVhT\",\"info\":\"UsersPage_info__YV7bU\",\"name\":\"UsersPage_name__p1mKl\",\"img\":\"UsersPage_img__elozA\"};"],"names":["props","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","value","setValue","_jsxs","children","_jsx","onBlur","e","target","trim","length","getValue","onChange","placeholder","type","required","className","_ref","page","totalCount","portionNumber","setPortionNumber","dispatch","useDispatch","pages","portionCount","Math","ceil","i","push","prevPortionItems","nextPortionItems","onClick","prev","filter","map","p","style","background","ActionUsersPage","changePage","name","setName","s","InputItem","fetchFindUsers","queryPage","_useTypedSelector","useTypedSelector","state","users","loading","authState","auth","location","useLocation","navigate","useNavigate","params","URLSearchParams","search","useEffect","get","fetchUsers","Number","concat","isAuth","follow","userId","fetchFollow","unfollow","fetchUnfollow","SearchInput","Pagination","user","User","authId","id","_props$user$photos","item","Link","to","avatar","img","src","photos","small","alt","info","status","followed"],"sourceRoot":""}